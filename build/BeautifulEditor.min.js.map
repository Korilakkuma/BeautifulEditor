{"version":3,"sources":["BeautifulEditor.js"],"names":["global","BeautifulEditor","iframe","this","contentWindow","contentDocument","HTMLIFrameElement","Error","body","contentEditable","designMode","editMode","EDIT_MODES","HTML","range","histories","historyPointer","outerHTML","currentBackgroundColor","TEXT","prototype","getWindow","getDocument","getSelection","getRange","index","i","parseInt","selection","rangeCount","getRangeAt","holdRange","cloneRange","revertRange","removeAllRanges","addRange","surround","tag","element","document","createElement","documentFragment","extractContents","appendChild","insertNode","isSelected","collapsed","moveCaret","isStart","execCommand","collapse","Boolean","pushHistory","length","slice","undo","eventTarget","eventType","callback","self","EventTarget","addEventListener","String","event","Object","toString","call","redo","backgroundColor","style","value","foreColor","backColor","fontName","fontSize","bold","italic","underline","strikeThrough","subscript","superscript","code","pre","indent","outdent","insertHorizontalRule","insertOrderedList","insertUnorderedList","insertParagraph","insertCheckbox","label","checkbox","setAttribute","insertBefore","firstChild","insertBlockquote","insertHTML","html","insertImage","src","createLink","htmlInputElement","HTMLInputElement","a","unlink","justifyCenter","justifyFull","justifyLeft","justifyRight","removeFormat","copy","cut","paste","selectAll","toHTML","innerHTML","textContent","toText","window"],"mappings":"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","file":"BeautifulEditor.min.js","sourcesContent":["/**\n * BeautifulEditor.js\n * @fileoverview HTML5 WYSIWYG Editor Library\n *\n * Copyright (c) 2013 Tomohiro IKEDA (Korilakkuma)\n * Released under the MIT license\n */\n \n \n \n(function(global) {\n    'use strict';\n\n    /**\n     * This contructor enables to edit iframe.\n     * @param {HTMLIFrameElement} iframe This argument is the instance of HTMLIFrameElement for edit.\n     * @contructor\n     */\n    function BeautifulEditor(iframe) {\n        this.iframe          = null;\n        this.contentWindow   = null;\n        this.contentDocument = null;\n\n        if (iframe instanceof HTMLIFrameElement) {\n            this.iframe          = iframe;\n            this.contentWindow   = iframe.contentWindow;\n            this.contentDocument = iframe.contentDocument;\n        } else {\n            throw new Error('The constructor requires the instance of HTMLIFrameElement.');\n        }\n\n        this.contentDocument.body.contentEditable = true;\n        this.contentDocument.designMode           = 'on';\n\n        this.editMode = BeautifulEditor.EDIT_MODES.HTML;\n\n        this.range = null;\n\n        /*\n        this.range = {\n            'startContainer': null,\n            'startOffset'   : 0,\n            'endContainer'  : null,\n            'endOffset'     : 0\n        };\n        */\n\n        this.histories      = [];\n        this.historyPointer = 0;\n\n        this.histories[this.historyPointer] = this.contentDocument.body.outerHTML;\n\n        this.currentBackgroundColor = 'rgba(255, 255, 255, 1.0)';\n    }\n\n    /**\n     * Class (Static) properties\n     */\n    BeautifulEditor.EDIT_MODES      = {};\n    BeautifulEditor.EDIT_MODES.HTML = 'html';\n    BeautifulEditor.EDIT_MODES.TEXT = 'text';\n\n    /**\n     * This method is getter for window object of iframe.\n     * @return {Window} This is returned as window object of iframe.\n     */\n    BeautifulEditor.prototype.getWindow = function() {\n        return this.contentWindow;\n    };\n\n    /**\n     * This method is getter for HTMLDocument of iframe.\n     * @return {HTMLDocument} This is returned as HTMLDocument of iframe.\n     */\n    BeautifulEditor.prototype.getDocument = function() {\n        return this.contentDocument;\n    };\n\n    /**\n     * This method is getter for the instance of Selection.\n     * @return {Selection} This is returned as the instance of Selection.\n     */\n    BeautifulEditor.prototype.getSelection = function() {\n        return this.contentWindow.getSelection();\n    };\n\n    /**\n     * This method is getter for the instance of Range.\n     * @param {number} index This argument is in order to specify index of the selected range.\n     * @return {Range} This is returned as the instance of Range.\n     */\n    BeautifulEditor.prototype.getRange = function(index) {\n        var i = parseInt(index);\n\n        var selection = this.contentWindow.getSelection();\n\n        if ((i >= 0) && (i < selection.rangeCount)) {\n            return selection.getRangeAt(i);\n        }\n\n        return null;\n    };\n\n    /**\n     * This method holds range.\n     * @param {number} index This argument is in order to specify index of the selected range.\n     */\n    BeautifulEditor.prototype.holdRange = function(index) {\n        var range = this.getRange(index);\n\n        if (range === null) {\n            return;\n        }\n\n        this.range = range.cloneRange();\n\n        /*\n        this.range.startContainer = range.startContainer;\n        this.range.startOffset    = range.startOffset;\n        this.range.endContainer   = range.endContainer;\n        this.range.endOffset      = range.endOffset;\n        */\n    };\n\n    /**\n     * This method reverts range.\n     */\n    BeautifulEditor.prototype.revertRange = function() {\n        // var range = this.contentDocument.createRange();\n\n        if (this.range !== null) {\n            /*\n            range.setStart(this.range.startContainer, this.range.startOffset);\n            range.setEnd(this.range.endContainer, this.range.endOffset);\n            */\n\n            var selection = this.getSelection();\n\n            selection.removeAllRanges();\n            selection.addRange(this.range);\n        }\n    };\n\n    /**\n     * This method surround the selected range by tag.\n     * @param {string} tag This argument is tag string.\n     * @return {Element|null} This is returned as the instance of Element or null.\n     */\n    BeautifulEditor.prototype.surround = function(tag) {\n        var selection = this.contentWindow.getSelection();\n\n        if (selection.rangeCount > 0) {\n            var range            = selection.getRangeAt(0);\n            var element          = document.createElement(tag);\n            var documentFragment = range.extractContents();\n\n            element.appendChild(documentFragment);\n\n            range.insertNode(element);\n\n            return element;\n        }\n\n        return null;\n    };\n\n    /**\n     * This method is in order to determine whether text is selected.\n     * @return {boolean} If text is selected, this value is true. Otherwise, this value is false.\n     */\n    BeautifulEditor.prototype.isSelected = function() {\n        var range = this.getRange(0);\n\n        if (range === null) {\n            return false;\n        }\n\n        return !range.collapsed;\n    };\n\n    /**\n     * This method moves caret.\n     * @param {boolean} isStart This argument is in order to select position of caret.\n     */\n    BeautifulEditor.prototype.moveCaret = function(isStart) {\n        this.contentDocument.execCommand('selectAll', false, null);\n\n        var selection = this.getSelection();\n        var range     = this.getRange(0);\n\n        if (range === null) {\n            return;\n        }\n\n        range.collapse(Boolean(isStart));\n\n        selection.removeAllRanges();\n        selection.addRange(range);\n    };\n\n    /**\n     * This method pushes history.\n     */\n    BeautifulEditor.prototype.pushHistory = function() {\n        this.histories[++this.historyPointer] = this.contentDocument.body.outerHTML;\n\n        if (this.historyPointer < (this.histories.length - 1)) {\n            this.histories = this.histories.slice(0, (this.historyPointer + 1));\n        }\n    };\n\n    /**\n     * This method adds event listener for undo.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     * @param {function} callback This argument is invoked when undo failed.\n     */\n    BeautifulEditor.prototype.undo = function(eventTarget, eventType, callback) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                if (self.historyPointer === (self.histories.length - 1)) {\n                    self.histories[self.historyPointer + 1] = self.contentDocument.body.outerHTML;\n                }\n\n                if (self.historyPointer > 0) {\n                    self.contentDocument.body.outerHTML = self.histories[--self.historyPointer];\n                } else {\n                    if (Object.prototype.toString.call(callback) === '[object Function]') {\n                        callback();\n                    }\n                }\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for redo.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     * @param {function} callback This argument is invoked when redo failed.\n     */\n    BeautifulEditor.prototype.redo = function(eventTarget, eventType, callback) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                if (self.historyPointer < (self.histories.length - 2)) {\n                    self.contentDocument.body.outerHTML = self.histories[++self.historyPointer];\n                } else {\n                    if (Object.prototype.toString.call(callback) === '[object Function]') {\n                        callback();\n                    }\n                }\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for background color.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.backgroundColor = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.body.style.backgroundColor = this.value;\n                self.currentBackgroundColor = this.value;\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for fore color.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.foreColor = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('foreColor', false, this.value);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for background color.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.backColor = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('backColor', false, this.value);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for font name.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.fontName = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('fontName', false, this.value);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for font size.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.fontSize = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('fontSize', false, this.value);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for bold.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.bold = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('bold', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for italic.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.italic = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('italic', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for underline.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.underline = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('underline', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for strike through.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.strikeThrough = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('strikeThrough', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for subscript.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.subscript = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('subscript', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for superscript.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.superscript = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('superscript', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for code.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.code = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                var range = self.getRange(0);\n\n                if (range === null) {\n                    return;\n                }\n\n                var code = self.surround('code');\n                var pre  = document.createElement('pre');\n\n                pre.appendChild(code);\n\n                range.insertNode(pre);\n\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for indent.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.indent = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('indent', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for outdent.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.outdent = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('outdent', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for horizontal rule.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.insertHorizontalRule = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('insertHorizontalRule', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for ordered list.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.insertOrderedList = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('insertOrderedList', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for unordered list.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.insertUnorderedList = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('insertUnorderedList', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for paragraph.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.insertParagraph = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('insertParagraph', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for inserting checkbox.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.insertCheckbox = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                var label    = self.surround('label');\n                var checkbox = document.createElement('input');\n\n                checkbox.setAttribute('type', 'checkbox');\n\n                label.insertBefore(checkbox, label.firstChild);\n\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for blockquote.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.insertBlockquote = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.surround('blockquote');\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method inserts HTML.\n     * @param {string} html This argument is string as HTML.\n     */\n    BeautifulEditor.prototype.insertHTML = function(html) {\n        this.contentDocument.execCommand('insertHTML', false, String(html));\n        this.pushHistory();\n    };\n\n    /**\n     * This method inserts image.\n     * @param {string} src This argument is one of path, Data URL, Object URL.\n     */\n    BeautifulEditor.prototype.insertImage = function(src) {\n        this.contentDocument.execCommand('insertImage', false, String(src));\n        this.pushHistory();\n    };\n\n    /**\n     * This method adds event listener for link.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     * @param {HTMLInputElement} htmlInputElement This argument is in order to get URL.\n     */\n    BeautifulEditor.prototype.createLink = function(eventTarget, eventType, htmlInputElement) {\n        var self = this;\n\n        if ((eventTarget instanceof EventTarget) && (htmlInputElement instanceof HTMLInputElement)) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                var a = self.surround('a');\n\n                if (a !== null) {\n                    a.setAttribute('href',   htmlInputElement.value);\n                    a.setAttribute('target', '_blank');\n                }\n\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for unlink.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.unlink = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('unlink', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for alignment in center.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.justifyCenter = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('justifyCenter', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for justification.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.justifyFull = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('justifyFull', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for alignment in left.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.justifyLeft = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('justifyLeft', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for alignment in right.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.justifyRight = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('justifyRight', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for removing format.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.removeFormat = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('removeFormat', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for copy.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.copy = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('copy', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for cut.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.cut = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('cut', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for paste.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.paste = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('paste', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for selection.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.selectAll = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('selectAll', false, null);\n            }, false);\n        }\n    };\n\n    /**\n     * This method adds event listener for deleting.\n     * @param {EventTarget} eventTarget This argument is the instance of EventTarget.\n     * @param {string} eventType This argument is string for event type.\n     */\n    BeautifulEditor.prototype.delete = function(eventTarget, eventType) {\n        var self = this;\n\n        if (eventTarget instanceof EventTarget) {\n            eventTarget.addEventListener(String(eventType), function(event) {\n                self.contentDocument.execCommand('delete', false, null);\n                self.pushHistory();\n            }, false);\n        }\n    };\n\n    /**\n     * This method switches to editing by HTML.\n     */\n    BeautifulEditor.prototype.toHTML = function() {\n        if (this.editMode === BeautifulEditor.EDIT_MODES.TEXT) {\n            this.contentDocument.body.innerHTML = this.contentDocument.body.textContent;\n            this.editMode = BeautifulEditor.EDIT_MODES.HTML;\n        }\n    };\n\n    /**\n     * This method switches to editing by text.\n     */\n    BeautifulEditor.prototype.toText = function() {\n        if (this.editMode === BeautifulEditor.EDIT_MODES.HTML) {\n            this.contentDocument.body.textContent = this.contentDocument.body.innerHTML;\n            this.editMode = BeautifulEditor.EDIT_MODES.TEXT;\n        }\n    };\n\n    /**\n     * This method exports HTML.\n     * @return {string} This is returned as HTML string.\n     */\n    BeautifulEditor.prototype.export = function() {\n        return '<div style=\"background-color: ' + this.currentBackgroundColor + ';\">' + this.contentDocument.body.innerHTML + '</div>';\n    };\n\n    // Export\n    global.BeautifulEditor = BeautifulEditor;\n\n})(window);\n"],"sourceRoot":"/source/"}